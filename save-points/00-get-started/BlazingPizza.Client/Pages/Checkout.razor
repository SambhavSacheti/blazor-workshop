@page "/checkout"
@inject HttpClient HttpClient
@inject OrderState OrderState
@inject NavigationManager NavigationManager

<div class="main">
    <EditForm Model="OrderState.Order.DeliveryAddress" OnValidSubmit="PlaceOrder">
        <div class="checkout-cols">
            <div class="checkout-order-details">
                <h4>Review Order</h4>
                <OrderReview Order="OrderState.Order" />
            </div>

            <div class="checkout-delivery-address">
                <h4>Deliver to..</h4>
                <AddressEditor Address="OrderState.Order.DeliveryAddress"/>
            </div>
        </div>
        <button class="checkout-button btn btn-warning" @onclick="PlaceOrder" type="submit">
        Place Order    
        </button>
        <DataAnnotationsValidator/>
    </EditForm>
</div>

@code{
    async Task PlaceOrder(){
    var response=
         await HttpClient.PostAsJsonAsync("orders", OrderState.Order);
    var newOrderId = await response.Content.ReadFromJsonAsync<object>();
     OrderState.ResetOrder();
    NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }
}